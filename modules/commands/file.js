module.exports.config = {
    name: "file",
    version: "1.0.1",
    hasPermssion: 2,
    credits: "JRT",
    description: "X√≥a file ho·∫∑c folder trong th∆∞ m·ª•c commands",
    commandCategory: "Admin",
    usages: "commands start <text>\ncommands ext <text>\ncommands <text>\ncommands [ƒë·ªÉ tr·ªëng]\ncommands help\nNOTE: <text> l√† k√Ω t·ª± b·∫°n ƒëi·ªÅn v√†o t√πy √Ω",
    cooldowns: 5
};

module.exports.handleReply = ({ api, event, args, handleReply }) => {
    if(event.senderID != handleReply.author) return; 
    const fs = require("fs-extra");
  var arrnum = event.body.split(" ");
  var msg = "";
  var nums = arrnum.map(n => parseInt(n));

  for(let num of nums) {
    var target = handleReply.files[num-1];
    var fileOrdir = fs.statSync(__dirname+'/'+target);
        if(fileOrdir.isDirectory() == true) {
          var typef = "[FolderüóÇÔ∏è]";
          fs.rmdirSync(__dirname+'/'+target, {recursive: true});
        }
        else if(fileOrdir.isFile() == true) {
          var typef = "[FileüìÑ]";
          fs.unlinkSync(__dirname+"/"+target);
        }
        msg += typef+' '+handleReply.files[num-1]+"\n";
  }
  api.sendMessage("‚ö°Ô∏èƒê√£ x√≥a c√°c file sau trong th∆∞ m·ª•c commands:\n\n"+msg, event.threadID, event.messageID);
}


module.exports.run = async function({ api, event, args, Threads }) {
  
  const fs = require("fs-extra");
  var files = fs.readdirSync(__dirname+"/") || [];
  var msg = "", i = 1;
  
//

  if(args[0] == 'help') {
    var msg = `
C√°ch d√πng l·ªánh:
‚Ä¢Key: start <text>
‚Ä¢T√°c d·ª•ng: L·ªçc ra file c·∫ßn x√≥a c√≥ k√Ω t·ª± b·∫Øt ƒë·∫ßu t√πy ch·ªçn
‚Ä¢V√≠ d·ª•: commands rank
‚Ä¢Key: ext <text>
‚Ä¢T√°c d·ª•ng: L·ªçc ra file c·∫ßn x√≥a c√≥ ƒëu√¥i t√πy ch·ªçn
‚Ä¢T√°c d·ª•ng: l·ªçc ra c√°c file trong t√™n c√≥ text t√πy ch·ªânh
‚Ä¢V√≠ d·ª•: commands a
‚Ä¢Key: ƒë·ªÉ tr·ªëng
‚Ä¢T√°c d·ª•ng: l·ªçc ra t·∫•t c·∫£ c√°c file trong cache
‚Ä¢V√≠ d·ª•: commands
‚Ä¢Key: help
‚Ä¢T√°c d·ª•ng: xem c√°ch d√πng l·ªánh
‚Ä¢V√≠ d·ª•: commands help`;
    
    return api.sendMessage(msg, event.threadID, event.messageID);
  }
  else if(args[0] == "start" && args[1]) {
    var word = args.slice(1).join(" ");
    var files = files.filter(file => file.startsWith(word));
    
    if(files.length == 0) return api.sendMessage(`‚ö°Ô∏èKh√¥ng c√≥ file n√†o trong cache c√≥ k√Ω t·ª± b·∫Øt ƒë·∫ßu b·∫±ng: ${word}`, event.threadID ,event. messageID);
    var key = `‚ö°Ô∏èC√≥ ${files.length} file c√≥ k√Ω t·ª± b·∫Øt ƒë·∫ßu l√†: ${word}`;
  }
  
  //ƒëu√¥i file l√†..... 
  else if(args[0] == "ext" && args[1]) {
    var ext = args[1];
    var files = files.filter(file => file.endsWith(ext));
    
    if(files.length == 0) return api.sendMessage(`‚ö°Ô∏èKh√¥ng c√≥ file n√†o trong commands c√≥ k√Ω t·ª± k·∫øt th√∫c b·∫±ng: ${ext}`, event.threadID ,event. messageID);
    var key = `‚ö°Ô∏èC√≥ ${files.length} file c√≥ ƒëu√¥i l√†: ${ext}`;
  }
  //all file
  else if (!args[0]) {
  if(files.length == 0) return api.sendMessage("‚ö°Ô∏èCommands c·ªßa b·∫°n kh√¥ng c√≥ file ho·∫∑c folder n√†o", event.threadID ,event. messageID);
  var key = "‚ö°Ô∏èT·∫•t c·∫£ c√°c file trong th∆∞ m·ª•c commands:";
  }
  //trong t√™n c√≥ k√Ω t·ª±.....
  else {
    var word = args.slice(0).join(" ");
    var files = files.filter(file => file.includes(word));
    if(files.length == 0) return api.sendMessage(`‚ö°Ô∏èKh√¥ng c√≥ file n√†o trong t√™n c√≥ k√Ω t·ª±: ${word}`, event.threadID ,event. messageID);
    var key = `‚ö°Ô∏èC√≥ ${files.length} file trong t√™n c√≥ k√Ω t·ª±: ${word}`;
  }
  
    files.forEach(file => {
        var fileOrdir = fs.statSync(__dirname+'/'+file);
        if(fileOrdir.isDirectory() == true) var typef = "[FolderüóÇÔ∏è]";
        if(fileOrdir.isFile() == true) var typef = "[FileüìÑ]";
        msg += (i++)+'. '+typef+' '+file+'\n';
    });
    
     api.sendMessage(`‚ö°Ô∏èReply tin nh·∫Øn b·∫±ng s·ªë ƒë·ªÉ x√≥a file t∆∞∆°ng ·ª©ng, c√≥ th·ªÉ rep nhi·ªÅu s·ªë, c√°ch nhau b·∫±ng d·∫•u c√°ch.\n${key}\n\n`+msg, event.threadID, (e, info) => global.client.handleReply.push({
    name: this.config.name,
    messageID: info.messageID,
    author: event.senderID,
    files
  }))
 
}